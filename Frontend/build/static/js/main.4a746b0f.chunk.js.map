{"version":3,"sources":["aes.js","chat/chat.js","store/action/index.js","process/process.js","home/home.js","App.js","store/reducer/index.js","store/reducer/process.js","index.js"],"names":["aes256","require","key","randomBytes","Chat","username","roomname","socket","useState","text","setText","messages","setMessages","dispatch","useDispatch","useEffect","on","data","encrypt","msg","cipher","ans","startsWith","decrypt","toString","DoDecrypt","cypher","type","payload","process","console","log","temp","push","userId","sendData","DoEncrypt","emit","messagesEndRef","useRef","current","scrollIntoView","behavior","className","style","fontSize","map","i","ref","placeholder","value","onChange","e","target","onKeyPress","onClick","Process","state","useSelector","ProcessReducer","color","Homepage","setusername","setroomname","src","alt","width","height","align","to","alert","io","Appmain","props","Fragment","match","params","App","path","exact","component","rootReducers","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a746b0f.chunk.js","sourcesContent":["var aes256 = require(\"aes256\");\r\nconst crypto = require('crypto');\r\nconst key = crypto.randomBytes(32);\r\n\r\nexport const DoEncrypt = (text) => {\r\n  var encrypted = aes256.encrypt(key.toString('hex'), text);\r\n  return encrypted;\r\n};\r\nexport const DoDecrypt = (cipher, username) => {\r\n  if (cipher.startsWith(\"Welcome\")) {\r\n    return cipher;\r\n  }\r\n\r\n  if (cipher.startsWith(username)) {\r\n    return cipher;\r\n  }\r\n\r\n  var decrypted = aes256.decrypt(key.toString('hex'), cipher);\r\n  return decrypted;\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./chat.scss\";\r\nimport { DoDecrypt, DoEncrypt } from \"../aes.js\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { process } from \"../store/action/index\";\r\n\r\nfunction Chat({ username, roomname, socket }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const dispatchProcess = (encrypt, msg, cipher) => {\r\n    dispatch(process(encrypt, msg, cipher));\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (data) => {\r\n      //decypt\r\n      const ans = DoDecrypt(data.text, data.username);\r\n      dispatchProcess(false, ans, data.text);\r\n      console.log(ans);\r\n      let temp = messages;\r\n      temp.push({\r\n        userId: data.userId,\r\n        username: data.username,\r\n        text: ans,\r\n      });\r\n      setMessages([...temp]);\r\n    });\r\n  }, [socket]);\r\n\r\n  const sendData = () => {\r\n    if (text !== \"\") {\r\n      //encrypt here\r\n      const ans = DoEncrypt(text);\r\n      socket.emit(\"chat\", ans);\r\n      setText(\"\");\r\n    }\r\n  };\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(scrollToBottom, [messages]);\r\n\r\n  console.log(messages, \"mess\");\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"user-name\">\r\n        <h2>\r\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\r\n        </h2>\r\n      </div>\r\n      <div className=\"chat-message\">\r\n        {messages.map((i) => {\r\n          if (i.username === username) {\r\n            return (\r\n              <div className=\"message\">\r\n                <p>{i.text}</p>\r\n                <span>{i.username}</span>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"message mess-right\">\r\n                <p>{i.text} </p>\r\n                <span>{i.username}</span>\r\n              </div>\r\n            );\r\n          }\r\n        })}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <div className=\"send\">\r\n        <input\r\n          placeholder=\"Type your message here\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              sendData();\r\n            }\r\n          }}\r\n        ></input>\r\n        <button onClick={sendData}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Chat;","export const process = (encrypt, text, cypher) => {\r\n  return {\r\n    type: \"PROCESS\",\r\n    payload: {\r\n      encrypt,\r\n      text,\r\n      cypher,\r\n    },\r\n  };\r\n};","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport animationData from \"../loading.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./process.scss\";\r\nfunction Process() {\r\n  const [play, setPlay] = useState(false);\r\n\r\n  const state = useSelector((state) => state.ProcessReducer);\r\n\r\n  const disconnectUser = () => {\r\n    \r\n  };\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"process\">\r\n      <h2 style={{color: \"white\"}}>AES Encrypted Chat Application</h2>\r\n      <h4>\r\n        Seceret Key : <span>\"obvwoqcbv21801f19d0zibcoavwpnq\"</span>\r\n      </h4>\r\n      <div className=\"incomming\">\r\n        <h4>Incomming Data</h4>\r\n        <p>{state.cypher}</p>\r\n      </div>\r\n      <div className=\"crypt\">\r\n        <h4>Decypted Data</h4>\r\n        <p>{state.text}</p>\r\n      </div>\r\n      <button  onClick={disconnectUser}>Disconnect</button>\r\n    </div>\r\n  );\r\n}\r\nexport default Process;","import React, { useState } from \"react\";\r\nimport \"./home.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Homepage({ socket }) {\r\n  const [username, setusername] = useState(\"\");\r\n  const [roomname, setroomname] = useState(\"\");\r\n\r\n  const sendData = () => {\r\n    if (username !== \"\" && roomname !== \"\") {\r\n      socket.emit(\"joinRoom\", { username, roomname });\r\n    } else {\r\n      alert(\"username and roomname are must !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <img src=\"../chat.png\" alt=\"chataes\" width=\"50\" height=\"50\" align=\"center\" />\r\n      <h1>Welcome</h1>\r\n      <input\r\n        placeholder=\"Enter your username\"\r\n        value={username}\r\n        onChange={(e) => setusername(e.target.value)}\r\n      ></input>\r\n      <input\r\n        placeholder=\"Enter room name\"\r\n        value={roomname}\r\n        onChange={(e) => setroomname(e.target.value)}\r\n      ></input>\r\n      <Link to={`/chat/${roomname}/${username}`}>\r\n        <button onClick={sendData}>Join</button>\r\n      </Link>\r\n      <p>\r\n        AES 256-bit Encrypted Chat Application\r\n      </p>\r\n      <p>\r\n        Developed with <img src=\"../nodejs.png\" alt=\"nodejs\" width=\"40\" height=\"40\" align=\"center\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;","import React from \"react\";\r\nimport Chat from \"./chat/chat\";\r\nimport Process from \"./process/process\";\r\nimport \"./App.scss\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./home/home\";\r\nimport io from \"socket.io-client\";\r\nconst socket = io(\"https://chatapprishabh098.azurewebsites.net\");\r\nfunction Appmain(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"right\">\r\n        <Chat\r\n          username={props.match.params.username}\r\n          roomname={props.match.params.roomname}\r\n          socket={socket}\r\n        />\r\n      </div>\r\n      <div className=\"left\">\r\n        <Process />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home socket={socket} />\r\n          </Route>\r\n          <Route path=\"/chat/:roomname/:username\" component={Appmain} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { ProcessReducer } from \"./process\";\r\nconst rootReducers = combineReducers({\r\n  ProcessReducer: ProcessReducer,\r\n});\r\nexport default rootReducers;","export const ProcessReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"PROCESS\":\r\n      return { ...action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducers from \"./store/reducer/index\";\r\n\r\nconst store = createStore(rootReducers);\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}